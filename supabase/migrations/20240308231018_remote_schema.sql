create extension if not exists "autoinc" with schema "extensions";

create extension if not exists "intarray" with schema "extensions";


create type "public"."Badge type" as enum ('concert', 'official_event', 'meetup');

create type "public"."Generation" as enum ('Gen 0', 'Gen 1', 'Gen 2', 'Gen 3', 'Gen 4', 'Gen 5', 'GAMERS', 'holoX', 'Indonesia', 'Myth', 'Promise', 'Advent', 'ReGLOSS', 'Alum', 'Office Staff');

create table "public"."badges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "image" text default ''::text,
    "type" "Badge type"
);


alter table "public"."badges" enable row level security;

create table "public"."talents" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name_en" text not null default ''::text,
    "name_jp" text not null,
    "fanmark" character varying not null,
    "gen" "Generation"
);


alter table "public"."talents" enable row level security;

alter table "public"."profiles" alter column "updated_at" set default now();

CREATE UNIQUE INDEX badges_id_key ON public.badges USING btree (id);

CREATE UNIQUE INDEX badges_name_key ON public.badges USING btree (name);

CREATE UNIQUE INDEX badges_pkey ON public.badges USING btree (id);

CREATE UNIQUE INDEX talents_name_en_key ON public.talents USING btree (name_en);

CREATE UNIQUE INDEX talents_name_jp_key ON public.talents USING btree (name_jp);

CREATE UNIQUE INDEX talents_pkey ON public.talents USING btree (id);

alter table "public"."badges" add constraint "badges_pkey" PRIMARY KEY using index "badges_pkey";

alter table "public"."talents" add constraint "talents_pkey" PRIMARY KEY using index "talents_pkey";

alter table "public"."badges" add constraint "badges_id_key" UNIQUE using index "badges_id_key";

alter table "public"."badges" add constraint "badges_name_key" UNIQUE using index "badges_name_key";

alter table "public"."talents" add constraint "talents_name_en_key" UNIQUE using index "talents_name_en_key";

alter table "public"."talents" add constraint "talents_name_jp_key" UNIQUE using index "talents_name_jp_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.increment(row_id integer)
 RETURNS void
 LANGUAGE sql
AS $function$
  update badges
  set id = id + 1
  where id = row_id;
$function$
;

grant delete on table "public"."badges" to "anon";

grant insert on table "public"."badges" to "anon";

grant references on table "public"."badges" to "anon";

grant select on table "public"."badges" to "anon";

grant trigger on table "public"."badges" to "anon";

grant truncate on table "public"."badges" to "anon";

grant update on table "public"."badges" to "anon";

grant delete on table "public"."badges" to "authenticated";

grant insert on table "public"."badges" to "authenticated";

grant references on table "public"."badges" to "authenticated";

grant select on table "public"."badges" to "authenticated";

grant trigger on table "public"."badges" to "authenticated";

grant truncate on table "public"."badges" to "authenticated";

grant update on table "public"."badges" to "authenticated";

grant delete on table "public"."badges" to "service_role";

grant insert on table "public"."badges" to "service_role";

grant references on table "public"."badges" to "service_role";

grant select on table "public"."badges" to "service_role";

grant trigger on table "public"."badges" to "service_role";

grant truncate on table "public"."badges" to "service_role";

grant update on table "public"."badges" to "service_role";

grant delete on table "public"."talents" to "anon";

grant insert on table "public"."talents" to "anon";

grant references on table "public"."talents" to "anon";

grant select on table "public"."talents" to "anon";

grant trigger on table "public"."talents" to "anon";

grant truncate on table "public"."talents" to "anon";

grant update on table "public"."talents" to "anon";

grant delete on table "public"."talents" to "authenticated";

grant insert on table "public"."talents" to "authenticated";

grant references on table "public"."talents" to "authenticated";

grant select on table "public"."talents" to "authenticated";

grant trigger on table "public"."talents" to "authenticated";

grant truncate on table "public"."talents" to "authenticated";

grant update on table "public"."talents" to "authenticated";

grant delete on table "public"."talents" to "service_role";

grant insert on table "public"."talents" to "service_role";

grant references on table "public"."talents" to "service_role";

grant select on table "public"."talents" to "service_role";

grant trigger on table "public"."talents" to "service_role";

grant truncate on table "public"."talents" to "service_role";

grant update on table "public"."talents" to "service_role";

create policy "Enable read access for all users"
on "public"."badges"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."talents"
as permissive
for select
to public
using (true);



